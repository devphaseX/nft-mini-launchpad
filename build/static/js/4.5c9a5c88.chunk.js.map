{"version":3,"sources":["../node_modules/@project-serum/sol-wallet-adapter/node_modules/bs58/index.js","../node_modules/@project-serum/sol-wallet-adapter/node_modules/bs58/node_modules/base-x/src/index.js","../../../src/index.ts"],"names":["basex","require","module","exports","_Buffer","Buffer","ALPHABET","length","TypeError","BASE_MAP","Uint8Array","j","i","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","decodeUnsafe","source","alloc","psz","zeroes","size","b256","carry","it3","Error","it4","vch","allocUnsafe","fill","encode","Array","isArray","from","isBuffer","pbegin","pend","b58","it1","it2","str","repeat","decode","string","buffer","Wallet","EventEmitter","constructor","provider","_network","_publicKey","_popup","_handlerAdded","_nextRequestId","_autoApprove","_responsePromises","Map","handleMessage","e","_injectedProvider","window","origin","_a","_providerUrl","data","method","newPublicKey","PublicKey","params","publicKey","equals","handleDisconnect","autoApprove","emit","result","error","promises","get","id","resolve","reject","_beforeUnload","disconnect","a","isObject","postMessage","isString","URL","hash","URLSearchParams","location","network","toString","handleConnect","addEventListener","Promise","sendRequest","name","open","once","removeEventListener","forEach","_ref","delete","connected","requestId","set","jsonrpc","Object","assign","_c","_b","_d","focus","connect","close","sign","display","response","signature","bs58","signTransaction","transaction","message","serializeMessage","addSignature","signAllTransactions","transactions","messages","map","tx","signatures","s","idx","diffieHellman"],"mappings":"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","file":"static/js/4.5c9a5c88.chunk.js","sourcesContent":["var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n",null],"sourceRoot":""}